{"version":3,"sources":["helper/types.ts","Components/login.tsx","App.tsx","index.tsx","helper/audios.ts","Components/Home.tsx","Components/keypad.tsx","Components/CallDialog.tsx","Components/SettingsDialog.tsx","Components/CallInfo.tsx","Components/Display.tsx","helper/helpers.ts"],"names":["actionButtons","RegistrationStates","Login","state","server","name","user","password","port","hasLoginDetails","regState","IDEAL","loginError","handleInputs","e","target","value","setState","handleRegistrationClick","REGISTERING","userAgentOptions","uri","UserAgent","makeURI","transportOptions","authorizationUsername","authorizationPassword","displayName","sendInitialProvisionalResponse","logBuiltinEnabled","userAgentString","sessionDescriptionHandlerFactoryOptions","iceCheckingTimeout","logLevel","userAgent","registererOptions","expires","refreshFrequency","onReject","Response","stop","message","reasonPhrase","registerer","Registerer","stateChange","addListener","RegistererState","Registered","props","handleRegistered","start","then","register","this","document","getElementById","parseInt","className","id","style","height","width","src","alt","type","placeholder","autoComplete","onChange","onClick","disabled","pointerEvents","display","role","window","location","replace","React","App","isSignedin","UA","UserAgentState","Started","console","log","Stopped","delegate","onDisconnect","Home","Component","ReactDOM","render","StrictMode","keyAudios","a0","Audio","a1","a2","a3","a4","a5","a6","a7","a8","a9","Ringers","ring1","ring2","ring3","ring4","ring5","calls","isMute","dialerNumber","mediaDevices","Array","settings","mic","ringer","touchTones","transferInitiated","showSettings","mediaElement","RemoteStream","MediaStream","handleKeyPress","event","includes","key","activeElement","handleNumericKeyPress","alert","slice","handleDialerKeyPress","MUTE","toggleMute","SWAP","swapCalls","CALL","initiateCall","END","disconnectCall","TRANSFER","handleCallTransfer","SETTINGS","Object","keys","forEach","pause","CONFERENCE","handleConference","EXIT","global","find","c","isHold","session","sessionDescriptionHandler","sendDtmf","duration","interToneGap","play","handleInput","preventDefault","nativeEvent","data","inputType","call","peerConnection","getSenders","t","track","enabled","settingChangers","handleCallInvite","invitation","onMessage","onNotify","notification","onAck","ack","onBye","bye","_onCancel","currentTime","handleCallDialogButtons","action","ACCEPT","incommingAccept","END_ACCEPT","endAccept","HOLD_ACCEPT","holdAccept","REJECT","invite","reject","statusCode","writeCallHistory","isIncomming","isConference","from","localIdentity","to","configuration","Date","callHistory","JSON","stringify","sessionId","getUUID","incomingSession","activeCall","isInward","remoteIdentity","timestamp","filter","newState","SessionState","Establishing","Established","srcObject","remoteMediaStream","timer","setInterval","forceUpdate","Terminated","options","sessionDescriptionHandlerOptions","constraints","audio","deviceId","video","accept","curruntCall","number","End","a","Promise","Resolve","Reject","cleanUpMedia","push","sessionDescriptionHandlerModifiers","Web","holdModifier","length","findIndex","Error","inviterOptions","earlyMedia","inviter","Inviter","outgoingSession","Ack","onInfo","info","onInvite","notif","onRefer","referal","callState","SDH","getReceivers","addTrack","catch","error","parkedCall","Initial","cancel","refer","tempMediaDevices","navigator","enumerateDevices","devices","device","kind","label","confirm","reload","err","addEventListener","removeEventListener","overflow","handleButtonPress","homeState","hasActiveCall","handleKeypress","autoPlay","playsInline","Keypad","backgroundColor","borderRadius","transform","CallDialog","zIndex","SettingsDialog","handleSelectChange","htmlFor","map","m","toLocaleUpperCase","checked","CallInfo","isActive","toISOString","substring","Display","margin","alignItems","color","fontFamily","fontSize","border","dt","getTime","r","Math","random","floor","toString"],"mappings":"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","file":"static/js/main.f8d2d6f7.chunk.js","sourcesContent":["\r\n\r\nexport enum actionButtons{\r\n    CALL = 'CALL',\r\n    SWAP = 'SWAP',\r\n    END = 'END',\r\n    MUTE = 'MUTE',\r\n    ACCEPT = 'ACCEPT',\r\n    HOLD_ACCEPT = 'HOLDACCEPT',\r\n    END_ACCEPT = 'ENDACCEPT',\r\n    REJECT = 'REJECT',\r\n    TRANSFER = 'TRANSFER',\r\n    CONFERENCE = 'CONFERENCE',\r\n    SETTINGS = \"SETTINGS\",\r\n    EXIT=\"EXIT\"\r\n  }\r\n\r\nexport type ServerDetails = {\r\n    name: string;\r\n    user: string;\r\n    password: string;\r\n    server: string;\r\n    port: number;\r\n}\r\n\r\nexport type MediaDevices = {\r\n    deviceId: string;\r\n    name: string;\r\n};\r\n\r\nexport type UserOptions = {\r\n    mic: string;\r\n    ringer: string;\r\n    touchTones: boolean;\r\n};\r\n\r\nexport type HistoryEntry = {\r\n    isIncomming: boolean;\r\n    isConference: boolean;\r\n    from: string;\r\n    to: string;\r\n    start: Date;\r\n    duration: number;\r\n    confContacts?: string[];\r\n}\r\n\r\n\r\n","import * as React from 'react';\r\n\r\nimport { Registerer, UserAgent, UserAgentOptions, RegistererState } from 'sip.js';\r\nimport { ServerDetails } from '../helper/types';\r\n\r\n//#region Helpers\r\nenum RegistrationStates {\r\n  IDEAL = 'IDEAL',\r\n  REGISTERING = 'REGISTERING',\r\n  REGISTERED = 'REGISTERED',\r\n}\r\n\r\n//#endregion\r\n\r\nexport interface LoginProps {\r\n  handleRegistered: (UA: UserAgent, server: ServerDetails) => void;\r\n}\r\nexport interface LoginStats {\r\n  server: ServerDetails;\r\n  hasLoginDetails: boolean;\r\n  regState: string;\r\n  loginError: string;\r\n}\r\n\r\nexport class Login extends React.Component<LoginProps, LoginStats> {\r\n  state = {\r\n    server: { name: '', user: '', password: '', server: '', port: 7443 },\r\n    hasLoginDetails: false,\r\n    regState: RegistrationStates.IDEAL,\r\n    loginError: '',\r\n  };\r\n  // Check if username and password is supplied by server\r\n  componentDidMount(): void {\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        server: {\r\n          name:\r\n            (document.getElementById('name') as HTMLInputElement).value ||\r\n            (document.getElementById('username') as HTMLInputElement).value,\r\n          user: (document.getElementById('username') as HTMLInputElement).value,\r\n          password: (document.getElementById('password') as HTMLInputElement).value,\r\n          server: (document.getElementById('server') as HTMLInputElement).value,\r\n          port: parseInt((document.getElementById('port') as HTMLInputElement).value),\r\n        },\r\n      },\r\n      () => {\r\n        //If all the data is correct start registration or show the form otherwise.\r\n        if (\r\n          this.state.server.user === '' ||\r\n          this.state.server.password === '' ||\r\n          this.state.server.server === ''\r\n        ) {\r\n          this.setState({ hasLoginDetails: false });\r\n        } else {\r\n          this.setState({ hasLoginDetails: true });\r\n          this.handleRegistrationClick();\r\n        }\r\n      },\r\n    );\r\n  }\r\n  //Handle Input at the form\r\n  handleInputs = (e: any) => {\r\n    var { value, name } = e.target;\r\n    this.setState({\r\n      ...this.state,\r\n      server: {\r\n        ...this.state.server,\r\n        [name]: value,\r\n      },\r\n    });\r\n  };\r\n  // Registration\r\n\r\n  handleRegistrationClick = () => {\r\n    this.setState({ regState: RegistrationStates.REGISTERING });\r\n    const uri = UserAgent.makeURI(`sip:${this.state.server.user}@${this.state.server.server}`);\r\n    const transportOptions = {\r\n      server: `wss://${this.state.server.server}:${this.state.server.port}`,\r\n    };\r\n    const userAgentOptions: UserAgentOptions = {\r\n      uri: uri,\r\n      transportOptions,\r\n      authorizationUsername: this.state.server.user,\r\n      authorizationPassword: this.state.server.password,\r\n      displayName: this.state.server.user,\r\n      sendInitialProvisionalResponse: true,\r\n      logBuiltinEnabled: false,\r\n      userAgentString: 'SIP.js/0.7.8 SaraPhone 04',\r\n      sessionDescriptionHandlerFactoryOptions: { iceCheckingTimeout: 500 },\r\n      logLevel: 'debug',\r\n    };\r\n    const userAgent = new UserAgent(userAgentOptions);\r\n\r\n    const registererOptions: any = {\r\n      expires: 1000,\r\n      refreshFrequency: 80,\r\n      onReject: (Response) => {\r\n        userAgent.stop();\r\n        this.setState({\r\n          loginError:\r\n            Response.message.reasonPhrase === 'Forbidden'\r\n              ? 'Username or password incorrect'\r\n              : Response.message.reasonPhrase,\r\n          hasLoginDetails: false,\r\n          regState: RegistrationStates.IDEAL,\r\n        });\r\n      },\r\n    };\r\n    const registerer = new Registerer(userAgent, registererOptions);\r\n\r\n    registerer.stateChange.addListener((state: RegistererState) => {\r\n      if (state === RegistererState.Registered) {\r\n        this.props.handleRegistered(userAgent, this.state.server);\r\n      }\r\n    });\r\n    userAgent.start().then(() => {\r\n      registerer.register();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center dark:bg-transparent\">\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-lg-8\">\r\n              <div className=\"card-group d-block d-md-flex row\">\r\n                <div className=\"card col-md-7 p-4 mb-0\">\r\n                  <div className=\"card-body\">\r\n                    <div id=\"signin\" className={'d-flex flex-column'} style={{ height: '100%' }}>\r\n                      <div className=\"row text-center mx-auto my-auto\" style={{ width: '80%' }}>\r\n                        <span className=\"w-100 mb-5\">\r\n                          <img\r\n                            src=\"./img/logo.png\"\r\n                            alt=\"Logo\"\r\n                            className=\"mx-auto\"\r\n                            style={{ width: '150px', height: 'auto' }}\r\n                          />\r\n                        </span>\r\n                        <form className={this.state.hasLoginDetails ? 'd-none' : 'd-block'}>\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder=\"Username\"\r\n                            name=\"user\"\r\n                            autoComplete=\"off\"\r\n                            className=\"form-control my-2\"\r\n                            value={this.state.server.user}\r\n                            onChange={this.handleInputs}\r\n                          />\r\n                          <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            autoComplete=\"off\"\r\n                            className=\"form-control my-2\"\r\n                            value={this.state.server.password}\r\n                            onChange={this.handleInputs}\r\n                          />\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder=\"Server\"\r\n                            name=\"server\"\r\n                            autoComplete=\"off\"\r\n                            className=\"form-control my-2\"\r\n                            value={this.state.server.server}\r\n                            onChange={this.handleInputs}\r\n                          />\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder=\"port\"\r\n                            name=\"port\"\r\n                            autoComplete=\"off\"\r\n                            className=\"form-control my-2\"\r\n                            value={this.state.server.port}\r\n                            onChange={this.handleInputs}\r\n                          />\r\n                        </form>\r\n                        <div id=\"login-button\">\r\n                          <button\r\n                            className=\"btn btn-primary form-control\"\r\n                            id=\"loginbtn\"\r\n                            type=\"button\"\r\n                            onClick={this.handleRegistrationClick}\r\n                            disabled={this.state.regState === RegistrationStates.REGISTERING}\r\n                          >\r\n                            <div\r\n                              style={{\r\n                                pointerEvents: 'none',\r\n                                display:\r\n                                  this.state.regState === RegistrationStates.REGISTERING\r\n                                    ? 'none'\r\n                                    : 'block',\r\n                              }}\r\n                            >\r\n                              Connect\r\n                            </div>\r\n                            <div\r\n                              style={{ pointerEvents: 'none' }}\r\n                              className={\r\n                                this.state.regState === RegistrationStates.REGISTERING\r\n                                  ? ''\r\n                                  : 'd-none'\r\n                              }\r\n                            >\r\n                              <span\r\n                                className=\"spinner-border spinner-border-sm\"\r\n                                role=\"status\"\r\n                                aria-hidden=\"true\"\r\n                              />\r\n                              <span className=\"sr-only ms-2\">Registering in please wait...</span>\r\n                            </div>\r\n                          </button>\r\n\r\n                          <span\r\n                            id=\"loginErrorMessage\"\r\n                            className={\r\n                              this.state.loginError !== ''\r\n                                ? 'mt-2 badge bg-danger'\r\n                                : 'mt-2 badge bg-danger d-none'\r\n                            }\r\n                          >\r\n                            {this.state.loginError}\r\n                          </span>\r\n                          <button\r\n                            className=\"btn btn-danger form-control my-2\"\r\n                            onClick={() => {\r\n                              window.location.replace('/');\r\n                            }}\r\n                          >\r\n                            Back to fusionpbx\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './css/dialer.css';\r\nimport './css/webphone.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './css/utilities.css';\r\nimport { UserAgent, UserAgentState } from 'sip.js';\r\n//Components\r\nimport { Login } from './Components/login';\r\nimport { Home } from './Components/Home';\r\nimport { ServerDetails } from './helper/types';\r\n//------\r\nexport interface AppProps {}\r\nexport interface AppState {\r\n  server?:ServerDetails\r\n  UA: UserAgent;\r\n  isSignedin: boolean;\r\n}\r\n\r\nclass App extends React.Component<AppProps, AppState> {\r\n  state = { isSignedin: false, UA: null,server:null };\r\n  handleRegistered = (userAgent: UserAgent, server: ServerDetails) => {\r\n    //listen to useragent disconnect events\r\n    userAgent.stateChange.addListener((state: UserAgentState) => {\r\n      switch (state) {\r\n        case UserAgentState.Started:\r\n          console.log('UA Started.');\r\n          break;\r\n        case UserAgentState.Stopped:\r\n          this.setState({isSignedin:false,UA:null})\r\n          console.log('UA Disconnected.');\r\n          break;\r\n      }\r\n    });\r\n    this.setState({ UA: userAgent, isSignedin: true, server: server }, () => {\r\n      this.state.UA.delegate.onDisconnect = () => { this.setState({isSignedin:false,UA:null})}\r\n    });\r\n  };\r\n\r\n  render() {\r\n    switch (this.state.isSignedin) {\r\n      case true:\r\n        return <Home UserAgent={this.state.UA} server={this.state.server} />;\r\n      case false:\r\n        return <Login handleRegistered={this.handleRegistered} />;\r\n    }\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","type TAudio = {\r\n    [key: string]: HTMLAudioElement;\r\n};\r\nexport const keyAudios: TAudio = {\r\n    a0: new Audio('./wav/0.wav'),\r\n    a1: new Audio('./wav/1.wav'),\r\n    a2: new Audio('./wav/2.wav'),\r\n    a3: new Audio('./wav/3.wav'),\r\n    a4: new Audio('./wav/4.wav'),\r\n    a5: new Audio('./wav/5.wav'),\r\n    a6: new Audio('./wav/6.wav'),\r\n    a7: new Audio('./wav/7.wav'),\r\n    a8: new Audio('./wav/8.wav'),\r\n    a9: new Audio('./wav/9.wav'),\r\n    'a*': new Audio('./wav/star.wav'),\r\n    'a#': new Audio('./wav/hash.wav'),\r\n};\r\nexport const Ringers: TAudio = {\r\n    ring1: new Audio('./wav/ring1.mp3'),\r\n    ring2: new Audio('./wav/ring2.mp3'),\r\n    ring3: new Audio('./wav/ring3.mp3'),\r\n    ring4: new Audio('./wav/ring4.mp3'),\r\n    ring5: new Audio('./wav/ring5.mp3')\r\n}","import React from 'react';\r\nimport {\r\n  UserAgent,\r\n  Invitation,\r\n  Message,\r\n  Notification as SNotification,\r\n  Ack,\r\n  Bye,\r\n  Session,\r\n  SessionState,\r\n  Web,\r\n  InvitationAcceptOptions,\r\n  InviterOptions,\r\n  Inviter,\r\n  Info,\r\n  Referral,\r\n} from 'sip.js';\r\nimport { Ringers, keyAudios } from '../helper/audios';\r\nimport { getUUID, log } from '../helper/helpers';\r\nimport { Keypad } from './keypad';\r\nimport { Display } from './Display';\r\nimport {\r\n  MediaDevices,\r\n  UserOptions,\r\n  HistoryEntry,\r\n  ServerDetails,\r\n  actionButtons,\r\n} from '../helper/types';\r\nimport { CallDialog } from './CallDialog';\r\nimport { IncomingRequestMessage } from 'sip.js/lib/core';\r\nimport { SettingsDialog } from './SettingsDialog';\r\n\r\n//#region Interface Call\r\nexport interface ICall {\r\n  id: string;\r\n  number: string;\r\n  name: string;\r\n  isHold: boolean;\r\n  isConference?: boolean;\r\n  timestamp: Date;\r\n  isInward: boolean;\r\n  session: Session;\r\n  duration: number;\r\n  timer?: NodeJS.Timer;\r\n  deligates?: {\r\n    onHold?: (isHold: boolean) => void;\r\n    onTick?: (duration: number) => void;\r\n    onEnd?: () => void;\r\n  };\r\n  End: () => Promise<boolean>;\r\n}\r\n//#endregion\r\n\r\nexport interface HomeProps {\r\n  server: ServerDetails;\r\n  UserAgent: UserAgent;\r\n}\r\nexport interface HomeStats {\r\n  dialerNumber: string;\r\n  calls: ICall[];\r\n  invitation?: Invitation;\r\n  isMute: boolean;\r\n  mediaDevices: MediaDevices[];\r\n  settings: UserOptions;\r\n  transferInitiated: boolean;\r\n  showSettings: boolean;\r\n}\r\n\r\nexport class Home extends React.Component<HomeProps, HomeStats> {\r\n  state: HomeStats = {\r\n    calls: [],\r\n    isMute: false,\r\n    dialerNumber: '',\r\n    mediaDevices: Array<MediaDevices>(),\r\n    settings: { mic: 'default', ringer: 'ring1', touchTones: true },\r\n    transferInitiated: false,\r\n    showSettings: false,\r\n  };\r\n\r\n  //#region Class Members\r\n  mediaElement: any;\r\n  RemoteStream: MediaStream = new MediaStream();\r\n  //#endregion\r\n\r\n  //#region Lifecycle hooks\r\n  componentDidMount(): void {\r\n    this.mediaElement = document.getElementById('audio');\r\n    //Populating Media devices\r\n    var tempMediaDevices: MediaDevices[] = Array<MediaDevices>();\r\n    if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\r\n      log('enumerateDevices() not supported.');\r\n    } else {\r\n      navigator.mediaDevices\r\n        .enumerateDevices()\r\n        .then((devices) => {\r\n          devices.forEach(function (device) {\r\n            if (device.kind === 'audioinput') {\r\n              tempMediaDevices.push({ name: device.label, deviceId: device.deviceId });\r\n            }\r\n          });\r\n          this.setState({ mediaDevices: tempMediaDevices });\r\n          if (this.state.mediaDevices.length === 0) {\r\n            let result = window.confirm('No Media device found. Please connect device.');\r\n            if (result) {\r\n              window.location.reload();\r\n            }\r\n          } else {\r\n            this.setState({\r\n              settings: { ...this.state.settings, mic: this.state.mediaDevices[0].deviceId },\r\n            });\r\n          }\r\n        })\r\n        .catch(function (err) {\r\n          log('Error Getting media ' + err.name + ': ' + err.message);\r\n        });\r\n    }\r\n    //creating new call manager instence\r\n\r\n    this.props.UserAgent.delegate = {\r\n      onInvite: this.handleCallInvite,\r\n    };\r\n    //this.props.UserAgent\r\n    //Keyboard events Listener\r\n    document.addEventListener('keyup', this.handleKeyPress);\r\n  }\r\n  componentWillUnmount(): void {\r\n    document.removeEventListener('keyup', this.handleKeyPress, false);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Event Handlers\r\n  handleKeyPress = (event: KeyboardEvent) => {\r\n    if (['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '*', '#', '+'].includes(event.key)) {\r\n      if (document.activeElement.id !== 'dialerNumber') {\r\n        this.handleNumericKeyPress(event.key);\r\n      }\r\n    } else {\r\n      switch (event.key) {\r\n        case '?':\r\n          alert(\r\n            `*********************************************\\n?     Show this keyboard help\\n↵      Make new call\\nEsc      Terminate Call\\nSpace     Mute\\n*********************************************`,\r\n          );\r\n          break;\r\n        case 'Enter':\r\n          log('enter');\r\n          break;\r\n\r\n        case 'Escape':\r\n          log('escape');\r\n          break;\r\n        case 'Backspace':\r\n          if (document.activeElement.id !== 'dialerNumber') {\r\n            this.setState({ dialerNumber: this.state.dialerNumber.slice(0, -1) });\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDialerKeyPress = (key: string) => {\r\n    //log(key);\r\n    if (['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '*', '#'].includes(key)) {\r\n      this.handleNumericKeyPress(key);\r\n    } else if (key === 'e') {\r\n      this.setState({ dialerNumber: this.state.dialerNumber.slice(0, -1) });\r\n    } else {\r\n      switch (key) {\r\n        case actionButtons.MUTE:\r\n          this.toggleMute();\r\n          break;\r\n        case actionButtons.SWAP:\r\n          this.swapCalls();\r\n          break;\r\n        case actionButtons.CALL:\r\n          this.initiateCall();\r\n          break;\r\n        case actionButtons.END:\r\n          this.disconnectCall();\r\n          break;\r\n        case actionButtons.TRANSFER:\r\n          this.handleCallTransfer();\r\n          break;\r\n        case actionButtons.SETTINGS: {\r\n          if (this.state.showSettings) {\r\n            Object.keys(Ringers).forEach(key => { \r\n              Ringers[key].pause();\r\n            })\r\n          }\r\n          this.setState({ showSettings: !this.state.showSettings });\r\n          break;\r\n        }\r\n        case actionButtons.CONFERENCE: {\r\n          this.handleConference();\r\n          break;\r\n        }\r\n        case actionButtons.EXIT: {\r\n          this.props.UserAgent.stop();\r\n          global.location.replace('/')\r\n          break;\r\n        }\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  handleNumericKeyPress = (key: string) => {\r\n    this.setState({ dialerNumber: this.state.dialerNumber + key });\r\n    //send dtmf if active call\r\n    this.state.calls\r\n      .find((c) => c.isHold === false)\r\n      ?.session.sessionDescriptionHandler.sendDtmf(key, {\r\n        duration: 100,\r\n        interToneGap: 100,\r\n      });\r\n    //play audio if set to\r\n    if (this.state.settings.touchTones) {\r\n      keyAudios[`a${key}`].play();\r\n    }\r\n  };\r\n  handleInput = (event: React.FormEvent<HTMLInputElement>) => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target as HTMLInputElement;\r\n    if (\r\n      ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '*', '#', '+'].includes(\r\n        (event.nativeEvent as InputEvent).data,\r\n      ) ||\r\n      ['deleteContentForward', 'deleteContentBackward', 'insertFromPaste'].includes(\r\n        (event.nativeEvent as InputEvent).inputType,\r\n      )\r\n    ) {\r\n      this.setState({ ...this.state, [name]: value.replace(/(?![0-9#*+,])./gi, '') });\r\n    }\r\n  };\r\n\r\n  toggleMute = () => {\r\n    this.state.calls.forEach((call) => {\r\n      if (this.state.isMute) {\r\n        log('un muting');\r\n        //Unmute Call\r\n        let SDH = (call.session as Session)\r\n          .sessionDescriptionHandler as Web.SessionDescriptionHandler;\r\n        SDH.peerConnection.getSenders().forEach((t) => {\r\n          t.track.enabled = true;\r\n        });\r\n      } else {\r\n        //Mute Call\r\n        log('muting');\r\n        let SDH = (call.session as Session)\r\n          .sessionDescriptionHandler as Web.SessionDescriptionHandler;\r\n        SDH.peerConnection.getSenders().forEach((t) => {\r\n          t.track.enabled = false;\r\n        });\r\n      }\r\n    });\r\n    this.setState({ isMute: !this.state.isMute });\r\n  };\r\n\r\n  //handling settings change\r\n  settingChangers = {\r\n    mic: (value: string) => { this.setState({ settings: { ...this.state.settings, mic: value } })},\r\n    touchTones: (value: boolean) => { this.setState({ settings: { ...this.state.settings, touchTones: value } })},\r\n    ringer: (value: string) => {\r\n      Object.keys(Ringers).forEach(key => { \r\n        Ringers[key].pause();\r\n      })\r\n      Ringers[value].play();\r\n      this.setState({ settings: { ...this.state.settings, ringer: value } })\r\n    },\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region  Call Management\r\n  handleCallInvite = (invitation: Invitation): void => {\r\n    // An Invitation is a Session\r\n    invitation.delegate = {\r\n      onMessage: (message: Message) => {\r\n        log('message->' + message);\r\n      },\r\n      onNotify: (notification: SNotification) => {\r\n        log('notification->' + notification);\r\n      },\r\n      onAck: (ack: Ack) => {\r\n        log('ack->' + ack);\r\n      },\r\n      onBye: (bye: Bye) => {\r\n        log('bye->' + bye);\r\n      },\r\n    };\r\n    invitation._onCancel = (message: IncomingRequestMessage) => {\r\n      Ringers[this.state.settings.ringer].pause();\r\n      this.setState({ invitation: null });\r\n      log('Invitation  cancelled.');\r\n    };\r\n    Ringers[this.state.settings.ringer].currentTime = 0;\r\n    Ringers[this.state.settings.ringer].play();\r\n    // this.ShowNotification('Incomming Call', {\r\n    //   body: `new Call from ${\r\n    //     invitation.remoteIdentity.displayName || invitation.remoteIdentity.uri.user || 'Unknown'\r\n    //   }\\nPlease Open webphone window to accept or rejetc the call`,\r\n    //   icon: './img/logo.png',\r\n    //   dir: 'ltr',\r\n    // });\r\n    this.setState({ ...this.state, invitation: invitation });\r\n  };\r\n\r\n  //Handle Incomming Call Prompts\r\n  handleCallDialogButtons = (action: string) => {\r\n    //stop playing music\r\n    Ringers[this.state.settings.ringer].currentTime = 0;\r\n    Ringers[this.state.settings.ringer].pause();\r\n    switch (action) {\r\n      case actionButtons.ACCEPT:\r\n        this.incommingAccept();\r\n        break;\r\n      case actionButtons.END_ACCEPT:\r\n        this.endAccept();\r\n        break;\r\n      case actionButtons.HOLD_ACCEPT:\r\n        this.holdAccept();\r\n        break;\r\n      case actionButtons.REJECT:\r\n        const invite: Invitation = this.state.invitation;\r\n        this.state.invitation.reject({\r\n          statusCode: 486,\r\n          reasonPhrase: 'busy',\r\n        });\r\n        this.setState({ ...this.state, invitation: null }, () => {\r\n          this.writeCallHistory({\r\n            isIncomming: true,\r\n            isConference: false,\r\n            from: invite.localIdentity.uri.user,\r\n            to: this.props.UserAgent.configuration.authorizationUsername,\r\n            start: new Date(),\r\n            duration: 0,\r\n          });\r\n        });\r\n        break;\r\n    }\r\n  };\r\n\r\n  //write call history\r\n  writeCallHistory = (callHistory: HistoryEntry) => {\r\n    //Not writing History as of now. can be implemented here in case local required.\r\n    log(JSON.stringify(callHistory));\r\n  };\r\n  //Accept incomming call\r\n  incommingAccept = () => {\r\n    let sessionId = getUUID();\r\n    const incomingSession: Session = this.state.invitation;\r\n    incomingSession.delegate = {\r\n      onBye: (bye: Bye) => {\r\n        let activeCall = this.state.calls.find((c) => c.id === sessionId);\r\n        if (activeCall) {\r\n          this.writeCallHistory({\r\n            isIncomming: activeCall.isInward,\r\n            isConference: activeCall.isConference,\r\n            from: activeCall.session.remoteIdentity.uri.user,\r\n            to: this.props.server.user,\r\n            start: activeCall.timestamp,\r\n            duration: activeCall.duration,\r\n          });\r\n        }\r\n        let calls = this.state.calls.filter((c) => c.id !== sessionId);\r\n        this.setState({ calls });\r\n      },\r\n    };\r\n    incomingSession.stateChange.addListener((newState: SessionState) => {\r\n      switch (newState) {\r\n        case SessionState.Establishing:\r\n          log('IN Session Establishing');\r\n          break;\r\n        case SessionState.Established:\r\n          {\r\n            log('IN Session Established');\r\n            const sessionDescriptionHandler =\r\n              incomingSession.sessionDescriptionHandler as Web.SessionDescriptionHandler;\r\n            this.mediaElement.srcObject = sessionDescriptionHandler.remoteMediaStream;\r\n            //Start Timer\r\n            this.state.calls.find((c) => c.id === sessionId).timer = setInterval(() => {\r\n              let activeCall = this.state.calls.find((c) => c.id === sessionId);\r\n              if (activeCall) {\r\n                activeCall.duration++;\r\n              }\r\n              this.forceUpdate();\r\n            }, 1000);\r\n            if (this.state.isMute) {\r\n              let SDH = (incomingSession as Session)\r\n                .sessionDescriptionHandler as Web.SessionDescriptionHandler;\r\n              SDH.peerConnection.getSenders().forEach((t) => {\r\n                t.track.enabled = false;\r\n              });\r\n            }\r\n          }\r\n          break;\r\n        case SessionState.Terminated:\r\n          log('IN session terminated');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    let constrainsDefault: MediaStreamConstraints = {\r\n      audio: { deviceId: this.state.settings.mic },\r\n      video: false,\r\n    };\r\n    const options: InvitationAcceptOptions = {\r\n      sessionDescriptionHandlerOptions: {\r\n        constraints: constrainsDefault,\r\n      },\r\n    };\r\n    this.state.invitation.accept(options);\r\n    const curruntCall: ICall = {\r\n      id: sessionId,\r\n      number: incomingSession.remoteIdentity.uri.user,\r\n      name: incomingSession.remoteIdentity.displayName,\r\n      isInward: true,\r\n      duration: 0,\r\n      session: incomingSession,\r\n      timestamp: new Date(),\r\n      isHold: false,\r\n      End: async (): Promise<boolean> => {\r\n        return new Promise((Resolve, Reject) => {\r\n          let calls = this.state.calls.filter((c) => c.id !== sessionId);\r\n          this.setState({ calls }, () => {\r\n            this.cleanUpMedia();\r\n            Resolve(true);\r\n          });\r\n        });\r\n      },\r\n    };\r\n    let calls = this.state.calls;\r\n    calls.push(curruntCall);\r\n    this.setState({ calls, invitation: null });\r\n  };\r\n\r\n  swapCalls = async (): Promise<boolean> => {\r\n    return new Promise((Resolve, Reject) => {\r\n      this.state.calls.forEach((call) => {\r\n        if (call.session.state === SessionState.Established) {\r\n          if (call.isHold === true) {\r\n            call.isHold = false;\r\n            call.session.invite({ sessionDescriptionHandlerModifiers: [] });\r\n          } else {\r\n            call.isHold = true;\r\n            call.session.invite({ sessionDescriptionHandlerModifiers: [Web.holdModifier] });\r\n          }\r\n        }\r\n      });\r\n      this.forceUpdate(() => {\r\n        Resolve(true);\r\n      });\r\n    });\r\n  };\r\n\r\n  initiateCall = async (): Promise<boolean> => {\r\n    return new Promise((Resolve, Reject) => {\r\n      //handling 2 calls as of now. can be updated here.\r\n      if (this.state.calls.length > 1) {\r\n        Resolve(true);\r\n      }\r\n      if (this.state.calls.findIndex((c) => c.isHold === false) !== -1) {\r\n        this.swapCalls();\r\n      }\r\n      let sessionId = getUUID();\r\n      if (this.state.dialerNumber.length < 3) {\r\n        return;\r\n      }\r\n      const target = UserAgent.makeURI(\r\n        `sip:${this.state.dialerNumber}@${this.props.server.server}`,\r\n      );\r\n      if (!target) {\r\n        throw new Error('Failed to create target URI.');\r\n      }\r\n      let constrainsDefault: MediaStreamConstraints = {\r\n        audio: { deviceId: this.state.settings.mic },\r\n        video: false,\r\n      };\r\n      const inviterOptions: InviterOptions = {\r\n        earlyMedia: true,\r\n        sessionDescriptionHandlerOptions: {\r\n          constraints: constrainsDefault,\r\n        },\r\n      };\r\n\r\n      const inviter = new Inviter(this.props.UserAgent, target, inviterOptions);\r\n      const outgoingSession: Session = inviter;\r\n      // Setup outgoing session delegate\r\n      inviter.delegate = {\r\n        onAck: (ack: Ack) => {\r\n          log('Ack->' + Ack);\r\n        },\r\n        //onBye: this.handleCallBye,\r\n        onInfo: (info: Info) => {\r\n          log('info->' + info);\r\n        },\r\n        onInvite: (invite: IncomingRequestMessage) => {\r\n          log('Invite' + invite);\r\n        },\r\n        onMessage: (message: Message) => {\r\n          log('out message->' + message);\r\n        },\r\n        onNotify: (notif: SNotification) => {\r\n          log('out nofif' + notif);\r\n        },\r\n        onRefer: (referal: Referral) => {\r\n          log('out refer->' + referal);\r\n        },\r\n        onBye: (bye: Bye) => {\r\n          let calls = this.state.calls.filter((c) => c.id !== sessionId);\r\n          this.setState({ calls });\r\n        },\r\n      };\r\n      // Handle outgoing session state changes.\r\n      inviter.stateChange.addListener((callState: SessionState) => {\r\n        switch (callState) {\r\n          case SessionState.Establishing:\r\n            log('OUT session Establishing');\r\n            break;\r\n          case SessionState.Established:\r\n            // Session has been established.\r\n            log('OUT session established');\r\n            let SDH = outgoingSession.sessionDescriptionHandler as Web.SessionDescriptionHandler;\r\n            SDH.peerConnection.getReceivers().forEach((track) => {\r\n              this.RemoteStream.addTrack(track.track);\r\n            });\r\n            if (this.state.isMute) {\r\n              SDH.peerConnection.getReceivers().forEach((track) => {\r\n                track.track.enabled = false;\r\n              });\r\n            }\r\n            this.mediaElement.srcObject = this.RemoteStream;\r\n            let curruntCall = this.state.calls.find((c) => c.id === sessionId);\r\n            if (!!!curruntCall) {\r\n              return;\r\n            }\r\n            curruntCall.timer = setInterval(() => {\r\n              let activeCall = this.state.calls.find((c) => c.id === sessionId);\r\n              if (activeCall) {\r\n                activeCall.duration++;\r\n              }\r\n              this.forceUpdate();\r\n            }, 1000);\r\n            break;\r\n          case SessionState.Terminated:\r\n            // Session has terminated.\r\n            log('Out session Terminated');\r\n            const activeCall = this.state.calls.find((c) => c.id === sessionId);\r\n            if (activeCall) {\r\n              this.writeCallHistory({\r\n                isIncomming: false,\r\n                isConference: false,\r\n                from: this.props.server.user,\r\n                to: activeCall.number,\r\n                start: activeCall.timestamp,\r\n                duration: activeCall.duration,\r\n              });\r\n            }\r\n            let calls = this.state.calls.filter((c) => c.id !== sessionId);\r\n            this.setState({ calls });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      inviter\r\n        .invite()\r\n        .then(() => {\r\n          log('Invite send success');\r\n        })\r\n        .catch((error: Error) => {\r\n          log('Error Inviting->' + error);\r\n        });\r\n      const curruntCall: ICall = {\r\n        id: sessionId,\r\n        number: this.state.dialerNumber,\r\n        name: this.state.dialerNumber,\r\n        isInward: true,\r\n        duration: 0,\r\n        session: inviter,\r\n        timestamp: new Date(),\r\n        isHold: false,\r\n        End: async (): Promise<boolean> => {\r\n          return new Promise((Resolve, Reject) => {\r\n            let calls = this.state.calls.filter((c) => c.id !== sessionId);\r\n            this.setState({ calls }, () => {\r\n              this.cleanUpMedia();\r\n              Resolve(true);\r\n            });\r\n          });\r\n        },\r\n      };\r\n      let calls = this.state.calls;\r\n      calls.push(curruntCall);\r\n      this.setState({ calls, dialerNumber: '' });\r\n    });\r\n  };\r\n\r\n  disconnectCall = async (): Promise<boolean> => {\r\n    return new Promise((Resolve, Reject) => {\r\n      let activeCall = this.state.calls.find((c) => c.isHold === false);\r\n      let parkedCall = this.state.calls.find((c) => c.isHold === true);\r\n      if (activeCall) {\r\n        if (\r\n          activeCall.session.state === SessionState.Initial ||\r\n          activeCall.session.state === SessionState.Establishing\r\n        ) {\r\n          (activeCall.session as Inviter).cancel();\r\n        } else {\r\n          activeCall.session.bye();\r\n          activeCall.End().then(() => {\r\n            Resolve(true);\r\n          });\r\n        }\r\n        //let byeOptions:SessionByeOptions = {}\r\n      } else if (parkedCall) {\r\n        //let byeOptions:SessionByeOptions = {}\r\n        parkedCall.session.bye();\r\n        parkedCall.End().then(() => {\r\n          Resolve(true);\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  holdAccept = async () => {\r\n    await this.swapCalls();\r\n    this.incommingAccept();\r\n  };\r\n  endAccept = async () => {\r\n    await this.disconnectCall();\r\n    this.incommingAccept();\r\n  };\r\n  cleanUpMedia = () => {\r\n    this.mediaElement.srcObject = null;\r\n    this.mediaElement.pause();\r\n  };\r\n  handleCallTransfer = () => {\r\n    if (!this.state.transferInitiated) {\r\n      this.setState({ transferInitiated: true, dialerNumber: '' });\r\n    } else {\r\n      if (this.state.dialerNumber.length > 2) {\r\n        if (this.state.calls.length > 0) {\r\n          let session =\r\n            this.state.calls.find((c) => c.isHold === false).session || this.state.calls[0].session;\r\n          const target = UserAgent.makeURI(\r\n            `sip:${this.state.dialerNumber}@${this.props.server.server}`,\r\n          );\r\n          session.refer(target);\r\n        }\r\n      }\r\n      this.setState({ transferInitiated: false, dialerNumber: '' });\r\n    }\r\n  };\r\n  handleConference = () => {\r\n    return new Promise((Resolve, Reject) => {\r\n      let sessionId = getUUID();\r\n      const target = UserAgent.makeURI(\r\n        `sip:${'*3'}@${this.props.server.server}`,\r\n      );\r\n      if (!target) {\r\n        throw new Error('Failed to create target URI.');\r\n      }\r\n      let constrainsDefault: MediaStreamConstraints = {\r\n        audio: { deviceId: this.state.settings.mic },\r\n        video: false,\r\n      };\r\n      const inviterOptions: InviterOptions = {\r\n        earlyMedia: true,\r\n        sessionDescriptionHandlerOptions: {\r\n          constraints: constrainsDefault,\r\n        },\r\n      };\r\n\r\n      const inviter = new Inviter(this.props.UserAgent, target, inviterOptions);\r\n      const outgoingSession: Session = inviter;\r\n      // Setup outgoing session delegate\r\n      inviter.delegate = {\r\n        onAck: (ack: Ack) => {\r\n          log('Ack->' + Ack);\r\n        },\r\n        //onBye: this.handleCallBye,\r\n        onInfo: (info: Info) => {\r\n          log('info->' + info);\r\n        },\r\n        onInvite: (invite: IncomingRequestMessage) => {\r\n          log('Invite' + invite);\r\n        },\r\n        onMessage: (message: Message) => {\r\n          log('out message->' + message);\r\n        },\r\n        onNotify: (notif: SNotification) => {\r\n          log('out nofif' + notif);\r\n        },\r\n        onRefer: (referal: Referral) => {\r\n          log('out refer->' + referal);\r\n        },\r\n        onBye: (bye: Bye) => {\r\n          let calls = this.state.calls.filter((c) => c.id !== sessionId);\r\n          this.setState({ calls });\r\n        },\r\n      };\r\n      // Handle outgoing session state changes.\r\n      inviter.stateChange.addListener((callState: SessionState) => {\r\n        switch (callState) {\r\n          case SessionState.Establishing:\r\n            log('OUT session Establishing');\r\n            break;\r\n          case SessionState.Established:\r\n            // Session has been established.\r\n            log('OUT session established');\r\n            let SDH = outgoingSession.sessionDescriptionHandler as Web.SessionDescriptionHandler;\r\n            SDH.peerConnection.getReceivers().forEach((track) => {\r\n              this.RemoteStream.addTrack(track.track);\r\n            });\r\n            if (this.state.isMute) {\r\n              SDH.peerConnection.getReceivers().forEach((track) => {\r\n                track.track.enabled = false;\r\n              });\r\n            }\r\n            this.mediaElement.srcObject = this.RemoteStream;\r\n            let curruntCall = this.state.calls.find((c) => c.id === sessionId);\r\n            if (!!!curruntCall) {\r\n              return;\r\n            }\r\n            curruntCall.timer = setInterval(() => {\r\n              let activeCall = this.state.calls.find((c) => c.id === sessionId);\r\n              if (activeCall) {\r\n                activeCall.duration++;\r\n              }\r\n              this.forceUpdate();\r\n            }, 1000);\r\n            break;\r\n          case SessionState.Terminated:\r\n            // Session has terminated.\r\n            log('Out session Terminated');\r\n            const activeCall = this.state.calls.find((c) => c.id === sessionId);\r\n            if (activeCall) {\r\n              this.writeCallHistory({\r\n                isIncomming: false,\r\n                isConference: false,\r\n                from: this.props.server.user,\r\n                to: activeCall.number,\r\n                start: activeCall.timestamp,\r\n                duration: activeCall.duration,\r\n              });\r\n            }\r\n            let calls = this.state.calls.filter((c) => c.id !== sessionId);\r\n            this.setState({ calls });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n      inviter\r\n        .invite()\r\n        .then(() => {\r\n          log('Invite send success');\r\n        })\r\n        .catch((error: Error) => {\r\n          log('Error Inviting->' + error);\r\n        });\r\n      const curruntCall: ICall = {\r\n        id: sessionId,\r\n        number: this.state.dialerNumber,\r\n        name: this.state.dialerNumber,\r\n        isInward: true,\r\n        duration: 0,\r\n        session: inviter,\r\n        timestamp: new Date(),\r\n        isHold: false,\r\n        End: async (): Promise<boolean> => {\r\n          return new Promise((Resolve, Reject) => {\r\n            let calls = this.state.calls.filter((c) => c.id !== sessionId);\r\n            this.setState({ calls }, () => {\r\n              this.cleanUpMedia();\r\n              Resolve(true);\r\n            });\r\n          });\r\n        },\r\n      };\r\n      let calls = this.state.calls;\r\n      calls.push(curruntCall);\r\n      this.setState({ calls, dialerNumber: '' });\r\n    });\r\n  }\r\n  //#endregion\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"container-fluid d-flex m-0 p-0\"\r\n        style={{ height: '100vh', overflow: 'hidden' }}\r\n      >\r\n        <div className=\"row justify-content-center border m-2 pb-0 flex-grow-1\">\r\n          <div className=\"col-sm-6 d-none\" id=\"history\">\r\n            History Goes Here\r\n          </div>\r\n          <div\r\n            className=\"col-sm-6 col-md-6 col-lg-6 col-xl-6 border d-flex flex-column\"\r\n            style={{ width: '480px' }}\r\n          >\r\n            <SettingsDialog handleButtonPress={this.handleDialerKeyPress} homeState={this.state} settingChangers={ this.settingChangers}/>\r\n            <CallDialog\r\n              handleButtonPress={this.handleCallDialogButtons}\r\n              invitation={this.state.invitation}\r\n              hasActiveCall={!!this.state.calls.find((c) => c.isHold === false)}\r\n            />\r\n            <Display\r\n              homeState={this.state}\r\n              UA={this.props.UserAgent}\r\n              handleInput={this.handleInput}\r\n            />\r\n            <Keypad homeState={this.state} handleKeypress={this.handleDialerKeyPress} />\r\n          </div>\r\n        </div>\r\n        <audio id=\"audio\" autoPlay playsInline />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { actionButtons } from '../helper/types';\r\nimport { HomeStats } from './Home';\r\n\r\nexport interface KeypadProps {\r\n  handleKeypress: (digit: string) => void;\r\n  homeState: HomeStats;\r\n}\r\n\r\nexport interface KeypadState {}\r\n\r\nexport class Keypad extends React.Component<KeypadProps, KeypadState> {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex flex-row justify-content-center\">\r\n        <div className=\"d-flex flex-column justify-content-start\">\r\n          <div className=\"d-flex flex-row\">\r\n            <div className=\"mx-1 p-1\">\r\n              <button className=\"digit\" onClick={() => this.props.handleKeypress('1')}>\r\n                1<div className=\"sub\"> </div>\r\n              </button>\r\n            </div>\r\n            <div className=\"mx-1 p-1\">\r\n              <button className=\"digit\" onClick={() => this.props.handleKeypress('2')}>\r\n                2<div className=\"sub\">ABC</div>\r\n              </button>\r\n            </div>\r\n            <div className=\"mx-1 p-1\">\r\n              <button className=\"digit\" onClick={() => this.props.handleKeypress('3')}>\r\n                3<div className=\"sub\">DEF</div>\r\n              </button>\r\n            </div>\r\n            <div className=\"m-1 p-1\">\r\n              <button\r\n                className=\"round_button\"\r\n                disabled={this.props.homeState.calls.length === 0}\r\n                onClick={() => this.props.handleKeypress(actionButtons.SWAP)}\r\n              >\r\n                <i className=\"bi bi-arrow-repeat\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"m-1 p-1\">\r\n              <button\r\n                className={'round_button'}\r\n                onClick={() => this.props.handleKeypress(actionButtons.MUTE)}\r\n                style={{ backgroundColor: this.props.homeState.isMute ? 'red' : '' }}\r\n              >\r\n                <i\r\n                  className={\r\n                    !this.props.homeState.isMute ? 'bi bi-mic-mute-fill' : 'bi bi-mic-fill'\r\n                  }\r\n                />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex flex-row\">\r\n            <div className=\"mx-1 p-1\">\r\n              <button className=\"digit\" onClick={() => this.props.handleKeypress('4')}>\r\n                4<div className=\"sub\">GHI</div>\r\n              </button>\r\n            </div>\r\n            <div className=\"mx-1 p-1\">\r\n              <button className=\"digit\" onClick={() => this.props.handleKeypress('5')}>\r\n                5<div className=\"sub\">JKL</div>\r\n              </button>\r\n            </div>\r\n            <div className=\"mx-1 p-1\">\r\n              <button className=\"digit\" onClick={() => this.props.handleKeypress('6')}>\r\n                6<div className=\"sub\">MNO</div>\r\n              </button>\r\n            </div>\r\n            <div className=\"m-1 p-1\">\r\n              <button\r\n                className=\"round_button\"\r\n                disabled={this.props.homeState.calls.length !== 2}\r\n                style={{}}\r\n                onClick={() => this.props.handleKeypress(actionButtons.CONFERENCE)}\r\n              >\r\n                <i className=\"bi bi-people-fill\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"m-1 p-1\">\r\n              <button\r\n                className=\"round_button\"\r\n                disabled={this.props.homeState.calls.length === 0}\r\n                style={{\r\n                  backgroundColor: this.props.homeState.transferInitiated ? 'greenyellow' : '',\r\n                }}\r\n                onClick={() => this.props.handleKeypress(actionButtons.TRANSFER)}\r\n              >\r\n                <i className=\"bi bi-telephone-forward-fill\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex flex-row\">\r\n            <div className=\"mx-1 p-1\">\r\n              <button className=\"digit\" onClick={() => this.props.handleKeypress('7')}>\r\n                7<div className=\"sub\">PQRS</div>\r\n              </button>\r\n            </div>\r\n            <div className=\"mx-1 p-1\">\r\n              <button className=\"digit\" onClick={() => this.props.handleKeypress('8')}>\r\n                8<div className=\"sub\">TUV</div>\r\n              </button>\r\n            </div>\r\n            <div className=\"mx-1 p-1\">\r\n              <button className=\"digit\" onClick={() => this.props.handleKeypress('9')}>\r\n                9<div className=\"sub\">WXYZ</div>\r\n              </button>\r\n            </div>\r\n            <div className=\"m-1 p-1\">\r\n              <button\r\n                className=\"round_button\"\r\n                // disabled={!this.props.homeState.activeCall}\r\n                style={{}}\r\n                onClick={() => this.props.handleKeypress('hold')}\r\n              >\r\n                <i className=\"bi bi-pause-fill\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"m-1 p-1\">\r\n              <button\r\n                className=\"round_button\"\r\n                //disabled={!this.props.connected}\r\n                style={{}}\r\n                onClick={() => this.props.handleKeypress('swap')}\r\n              >\r\n                <i className=\"bi bi-telephone-plus-fill\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex flex-row\">\r\n            <div className=\"mx-1 p-1\">\r\n              <button\r\n                className=\"digit justify-center\"\r\n                onClick={() => this.props.handleKeypress('*')}\r\n              >\r\n                *\r\n              </button>\r\n            </div>\r\n            <div className=\"mx-1 p-1\">\r\n              <button\r\n                className=\"digit justify-center\"\r\n                onClick={() => this.props.handleKeypress('0')}\r\n              >\r\n                0\r\n              </button>\r\n            </div>\r\n            <div className=\"mx-1 p-1\">\r\n              <button\r\n                className=\"digit justify-center\"\r\n                onClick={() => this.props.handleKeypress('#')}\r\n              >\r\n                #\r\n              </button>\r\n            </div>\r\n            <div className=\"m-1 p-1\">\r\n              {' '}\r\n              <button\r\n                className=\"round_button\"\r\n                // disabled={!this.props.homeState.activeCall}\r\n                style={{}}\r\n                onClick={() => this.props.handleKeypress(actionButtons.SETTINGS)}\r\n              >\r\n                <i className=\"bi bi-gear-fill\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"m-1 p-1\">\r\n              {' '}\r\n              <button\r\n                className=\"round_button\"\r\n                onClick={() => this.props.handleKeypress(actionButtons.EXIT)}\r\n              >\r\n                <i className=\"bi bi-house-fill\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex flex-row\">\r\n            <div className=\"mx-1 p-1\">\r\n              <button className=\"round_button\" onClick={() => this.props.handleKeypress('e')}>\r\n                <i className={'bi bi-backspace-fill'} />\r\n              </button>\r\n            </div>\r\n            <div className=\"mx-1 p-1\">\r\n              <button\r\n                className=\"round_button\"\r\n                style={{ backgroundColor: 'green', width: '150px', borderRadius: '40px' }}\r\n                onClick={() => this.props.handleKeypress(actionButtons.CALL)}\r\n              >\r\n                <i className={'bi bi-telephone-fill'} />\r\n              </button>\r\n            </div>\r\n            <div className=\"mx-auto py-1\">\r\n              <button\r\n                className=\"round_button\"\r\n                //disabled={!this.props.connected}\r\n                style={{\r\n                  width: '150px',\r\n                  borderRadius: '40px',\r\n                  backgroundColor: '#ff0000',\r\n                }}\r\n                onClick={() => this.props.handleKeypress(actionButtons.END)}\r\n              >\r\n                <i\r\n                  className=\"bi bi-telephone-fill\"\r\n                  style={{ transform: 'rotate(135deg) scale(1.8)' }}\r\n                />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Invitation } from 'sip.js';\r\nimport { actionButtons } from '../helper/types';\r\nexport interface CallDialogProps {\r\n  handleButtonPress:(action:string)=>void\r\n  invitation: Invitation;\r\n  hasActiveCall: boolean;\r\n}\r\n\r\nexport interface CallDialogState {}\r\n\r\nexport class CallDialog extends React.Component<CallDialogProps, CallDialogState> {\r\n  render() {\r\n    if (!!this.props.invitation) {\r\n      return (\r\n        <div className=\"d-block position-absolute bg-info p-2\" style={{zIndex:99,width:'454px'}}>\r\n          <div className=\"row text-center\">\r\n            <div className=\"col mx-auto\">\r\n              <p className='h5'>{`Call From ${this.props.invitation.remoteIdentity.displayName} (${this.props.invitation.remoteIdentity.uri.user})` }</p>\r\n            </div>            \r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <button\r\n                onClick={() => this.props.handleButtonPress(actionButtons.ACCEPT)}\r\n                disabled={this.props.hasActiveCall}\r\n                style={{ height: '52px' }} className=\"form-control btn btn-sm btn-success\">Accept</button>\r\n            </div>\r\n            <div className=\"col\">\r\n              <button\r\n                disabled={!this.props.hasActiveCall}\r\n                onClick={() => this.props.handleButtonPress(actionButtons.HOLD_ACCEPT)}\r\n                style={{ height: '52px' }} className=\"form-control btn btn-sm btn-success\">Hold & Accept</button>\r\n            </div>  \r\n            <div className=\"col\">\r\n              <button\r\n                disabled={!this.props.hasActiveCall}\r\n                onClick={() => this.props.handleButtonPress(actionButtons.END_ACCEPT)}\r\n                style={{ height: '52px' }} className=\"form-control btn btn-sm btn-success\">End & Accept</button>\r\n            </div>  \r\n            <div className=\"col\">\r\n              <button\r\n              onClick={() => this.props.handleButtonPress(actionButtons.REJECT)}\r\n                style={{ height: '52px' }} className=\"form-control btn btn-sm btn-danger\">Reject</button>\r\n            </div>  \r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { actionButtons } from '../helper/types';\r\nimport { HomeStats } from './Home';\r\nexport interface SettingsDialogProps {\r\n  handleButtonPress: (action: string) => void;\r\n  settingChangers: {\r\n    mic: (value: string) => void,\r\n    touchTones: (value: boolean) => void,\r\n    ringer: (value: string) => void,  }\r\n  homeState: HomeStats;\r\n}\r\n\r\nexport interface SettingsDialogState {}\r\n\r\nexport class SettingsDialog extends React.Component<SettingsDialogProps, SettingsDialogState> {\r\n  handleSelectChange = (event) => {\r\n    console.log(event)\r\n   }\r\n  render() {\r\n    if (!!this.props.homeState.showSettings) {\r\n      return (\r\n        <div\r\n          className=\"d-block position-absolute bg-light border p-2 mt-4\"\r\n          style={{ zIndex: 99, width: '454px' }}\r\n        >\r\n          <div className=\"form-group my-2\">\r\n            <label htmlFor=\"mic\">Default Mic</label>\r\n            <select\r\n              className=\"form-select\"\r\n              id=\"mic\"\r\n              value={this.props.homeState.settings.mic}\r\n              onChange={(e) => {\r\n                this.props.settingChangers.mic(e.target.value);\r\n              }}\r\n            >\r\n              {this.props.homeState.mediaDevices.map((m) => {\r\n                return (\r\n                  <option key={m.deviceId} value={m.deviceId}>\r\n                    {m.name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group my-2\">\r\n            <label htmlFor=\"ringer\">ringtone</label>\r\n            <select\r\n              className=\"form-select\"\r\n              id=\"ringer\"\r\n              value={this.props.homeState.settings.ringer}\r\n              onChange={(e) => {\r\n                this.props.settingChangers.ringer(e.target.value);\r\n              }}\r\n            >\r\n              {[ 'ring1', 'ring2', 'ring3', 'ring4', 'ring5'].map((m) => {\r\n                return (\r\n                  <option key={m} value={m}>\r\n                    {m.toLocaleUpperCase()}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"form-check\">\r\n              <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" checked={this.props.homeState.settings.touchTones} onChange={(e)=>this.props.settingChangers.touchTones(e.target.checked)} />\r\n              <label className=\"form-check-label\" htmlFor=\"gridCheck\">\r\n               Touch Tones\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group my-2\">\r\n            <button\r\n              className=\"btn btn-primary max-auto\"\r\n              onClick={() => this.props.handleButtonPress(actionButtons.SETTINGS)}\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { ICall } from './Home';\r\n\r\ninterface CallInfoProps {\r\n  call: ICall;\r\n  isActive: boolean;\r\n}\r\n\r\ninterface CallInfoState {}\r\n\r\nclass CallInfo extends React.Component<CallInfoProps, CallInfoState> {\r\n  state = {};\r\n  render() {\r\n    if (this.props.call) {\r\n      return !this.props.isActive ? (\r\n        <div>\r\n          <div className=\"d-flex flex-row justify-content-between flex-wrap flex-grow-1\">\r\n            <div className=\"d-flex px-0\"></div>\r\n            <div className=\"px-2\">\r\n              <i className={'bi bi-telephone-forward-fill pe-none'} />\r\n            </div>\r\n            <div className=\"px-2\">\r\n              <h5 className=\"m-0 user-select-none park-number\">{this.props.call.number}</h5>\r\n            </div>\r\n            <div className=\"px-2\">\r\n              <small className=\"m-0 user-select-none park-timer\">\r\n                {new Date(this.props.call.duration * 1000).toISOString().substring(11, 19)}\r\n              </small>\r\n            </div>\r\n            <div className=\"px-2\">\r\n              <i\r\n                className={\r\n                  'bi bi-pause-fill pe-none blink ' + (true ? 'text-success' : 'text-danger')\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"d-flex px-0\">\r\n              {/* <i\r\n              className={'bi bi-play-circle-fill ' + (false ? 'text-success' : 'text-danger')}\r\n              style={{\r\n                transform: 'scale(2)',\r\n              }}\r\n            /> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"d-flex flex-column justify-content-center\">\r\n            <div className=\"mx-auto\"></div>\r\n            <div className=\"mx-auto py-2\">\r\n              <strong className=\"m-0 active-number\">{this.props.call.number}</strong>\r\n            </div>\r\n            <div className=\"mx-auto py-2\">\r\n              {new Date(this.props.call.duration * 1000).toISOString().substring(11, 19)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\nexport default CallInfo;\r\n","import React from 'react';\r\nimport CallInfo from './CallInfo';\r\nimport { UserAgent } from 'sip.js';\r\nimport { HomeStats } from './Home';\r\nexport interface DisplayProps {\r\n  homeState:HomeStats\r\n  UA: UserAgent;\r\n  handleInput: (event: React.FormEvent<HTMLInputElement>) => void;\r\n}\r\nexport interface DisplayStats {}\r\nexport class Display extends React.Component<DisplayProps, DisplayStats> {\r\n  state: DisplayStats = {};\r\n  render() {\r\n    return (\r\n      <div id=\"display\" className=\"d-flex flex-column mb-3\">\r\n        <div\r\n          className=\"row\"\r\n          style={{ margin: '10px', alignItems: 'center', backgroundColor: 'white' }}\r\n        >\r\n          <div\r\n            className=\"col-4 d-flex flex-row\"\r\n            style={{\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <i\r\n              id=\"registration_indicator\"\r\n              className={'bi bi-lock-fill ' + (true ? 'text-success' : 'text-danger')}\r\n              style={{\r\n                transform: 'scale(1.5)',\r\n              }}\r\n            />\r\n            <h4 id=\"registration_user\" className=\"ms-3 mt-0 mb-0\">\r\n              {this.props.UA.configuration.authorizationUsername}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n        <hr></hr>\r\n        <div\r\n          style={{\r\n            backgroundColor: 'var(--screen-back-color)',\r\n            borderRadius: '24px',\r\n            height: '220px',\r\n          }}\r\n        >\r\n          <div id=\"parkedCalls\" className=\"row d-flex flex-row mt-3\" style={{ height: '24px' }}>\r\n            <div className=\"col-12\">\r\n              <CallInfo call={this.props.homeState.calls.find(c=>c.isHold === true)} isActive={false} />\r\n            </div>\r\n          </div>\r\n          <div id=\"activeCall\" className=\"row d-flex flex-row my-2\" style={{ height: '104px' }}>\r\n            <div className=\"col-12\">\r\n              <CallInfo call={this.props.homeState.calls.find((c)=>c.isHold ===false)} isActive={true} />\r\n            </div>\r\n          </div>\r\n          <div id=\"digit-input\" className=\"row d-flex flex-row my-2\">\r\n            <div className=\"d-flex flex-row\">\r\n              <div className=\"d-flex flex-grow-1 mx-1 p-1\">\r\n                <input\r\n                  className=\"form-control shadow-none text-center ms-1\"\r\n                  onChange={this.props.handleInput}\r\n                  value={this.props.homeState.dialerNumber}\r\n                  type=\"text\"\r\n                  name=\"dialerNumber\"\r\n                  id=\"dialerNumber\"\r\n                  autoComplete=\"off\"\r\n                  placeholder=\"_\"\r\n                  style={{\r\n                    color: 'var(--screen-text-color)',\r\n                    fontFamily: 'Roboto',\r\n                    fontSize: '1.7rem',\r\n                    backgroundColor: 'var(--back-color)',\r\n                    border: 'none',\r\n                    width: '100%',\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export function getUUID() {\r\n  var dt = new Date().getTime();\r\n  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n    var r = (dt + Math.random() * 16) % 16 | 0;\r\n    dt = Math.floor(dt / 16);\r\n    return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n  });\r\n  return uuid;\r\n}\r\nexport function log(message: string) {\r\n  let timestamp = (new Date()).toISOString();\r\n  console.log(`${timestamp}\\t ${message}`,);\r\n}\r\n"],"sourceRoot":""}